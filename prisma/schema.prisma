// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int                  @id @default(autoincrement())
  name         String
  password     String
  phoneNo      String               @unique
  uniqueId     String?              @unique
  typeOfWork   TypeOfWork[]
  address      String               @default("")
  email        String               @default("")
  role         UserRole             @default(VENDOR)
  status       UserStatus           @default(ACTIVE)
  concernedFor Process[]            @relation("ConcernedProcesses")
  permissions PagePermission[] 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PagePermission {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  page     String
  canView  Boolean @default(false)
  canEdit  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, page]) // Ensure one permission per user per page
}

enum UserRole {
  ADMIN
  VENDOR
  PROCESS_COORDINATOR
}

enum UserStatus {
  ACTIVE
  NOT_ACTIVE
}

model TypeOfWork {
  id     Int    @id @default(autoincrement())
  value  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Process {
  id            Int    @id @default(autoincrement())
  name          String
  shortForm     String
  targetDays    Int
  concernedDept User[] @relation("ConcernedProcesses")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Component {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  Quant     String
  uniqueId  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id        Int      @id @default(autoincrement())
  unitname  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id         Int    @id @default(autoincrement())
  name       String
  noOfPieces Int
}

model Design {
  id         Int                 @id @default(autoincrement())
  designNo   String              @unique
  sizes      DesignSize[]
  components ComponentInDesign[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DesignSize {
  id       Int    @id @default(autoincrement())
  size     String
  design   Design @relation(fields: [designId], references: [id])
  designId Int
}

model ComponentInDesign {
  id              Int                  @id @default(autoincrement())
  name            String
  totalTargetDays Int
  design          Design               @relation(fields: [designId], references: [id])
  designId        Int
  processes       ProcessInComponent[]
}

model ProcessInComponent {
  id          Int               @id @default(autoincrement())
  name        String
  targetDays  Int
  component   ComponentInDesign @relation(fields: [componentId], references: [id])
  componentId Int
}
